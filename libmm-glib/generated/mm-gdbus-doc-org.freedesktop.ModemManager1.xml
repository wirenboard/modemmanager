<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd" [
]>
<refentry id="gdbus-org.freedesktop.ModemManager1">
  <refmeta>    <refentrytitle role="top_of_page" id="gdbus-interface-org-freedesktop-ModemManager1.top_of_page">org.freedesktop.ModemManager1</refentrytitle>
  <indexterm zone="gdbus-interface-org-freedesktop-ModemManager1.top_of_page"><primary sortas="org.freedesktop.ModemManager1">org.freedesktop.ModemManager1</primary></indexterm>
  </refmeta>  <refnamediv>    <refname>org.freedesktop.ModemManager1</refname>    <refpurpose>The ModemManager Manager interface.</refpurpose>  </refnamediv>  <refsynopsisdiv role="synopsis">
    <title role="synopsis.title">Methods</title>
    <synopsis>
<link linkend="gdbus-method-org-freedesktop-ModemManager1.ScanDevices">ScanDevices</link>       ();
<link linkend="gdbus-method-org-freedesktop-ModemManager1.SetLogging">SetLogging</link>        (IN  s     level);
<link linkend="gdbus-method-org-freedesktop-ModemManager1.ReportKernelEvent">ReportKernelEvent</link> (IN  a{sv} properties);
<link linkend="gdbus-method-org-freedesktop-ModemManager1.InhibitDevice">InhibitDevice</link>     (IN  s     uid,
                   IN  b     inhibit);
</synopsis>
  </refsynopsisdiv>
  <refsect1 role="properties">
    <title role="properties.title">Properties</title>
    <synopsis>
<link linkend="gdbus-property-org-freedesktop-ModemManager1.Version">Version</link>  readable   s
</synopsis>
  </refsect1>
<refsect1 role="desc" id="gdbus-interface-org-freedesktop-ModemManager1">
  <title role="desc.title">Description</title>
  <para>
The Manager interface allows controlling and querying the status of the
ModemManager daemon.
</para>
</refsect1>
<refsect1 role="details" id="gdbus-methods-org.freedesktop.ModemManager1">
  <title role="details.title">Method Details</title>
<refsect2 role="method" id="gdbus-method-org-freedesktop-ModemManager1.ScanDevices">
  <title>The ScanDevices() method</title>
  <indexterm zone="gdbus-method-org-freedesktop-ModemManager1.ScanDevices"><primary sortas="org.freedesktop.ModemManager1.ScanDevices">org.freedesktop.ModemManager1.ScanDevices()</primary></indexterm>
<programlisting>
ScanDevices ();
</programlisting>
<para>
Start a new scan for connected modem devices.
</para><para>
Since: 1.0
</para>
</refsect2>
<refsect2 role="method" id="gdbus-method-org-freedesktop-ModemManager1.SetLogging">
  <title>The SetLogging() method</title>
  <indexterm zone="gdbus-method-org-freedesktop-ModemManager1.SetLogging"><primary sortas="org.freedesktop.ModemManager1.SetLogging">org.freedesktop.ModemManager1.SetLogging()</primary></indexterm>
<programlisting>
SetLogging (IN  s level);
</programlisting>
<para>
Set logging verbosity.
</para><para>
Since: 1.0
</para>
<variablelist role="params">
<varlistentry>
  <term><literal>IN s <parameter>level</parameter></literal>:</term>
  <listitem><para>
One of <literal>"ERR"</literal>, <literal>"WARN"</literal>, <literal>"INFO"</literal>, <literal>"DEBUG"</literal>.
</para></listitem>
</varlistentry>
</variablelist>
</refsect2>
<refsect2 role="method" id="gdbus-method-org-freedesktop-ModemManager1.ReportKernelEvent">
  <title>The ReportKernelEvent() method</title>
  <indexterm zone="gdbus-method-org-freedesktop-ModemManager1.ReportKernelEvent"><primary sortas="org.freedesktop.ModemManager1.ReportKernelEvent">org.freedesktop.ModemManager1.ReportKernelEvent()</primary></indexterm>
<programlisting>
ReportKernelEvent (IN  a{sv} properties);
</programlisting>
<para>
Reports a kernel event to ModemManager.
</para><para>
This method is only available if udev is not being used to report kernel
events.
</para><para>
The <parameter>properties</parameter> dictionary is composed of key/value string pairs. The
possible keys are:
</para><para>
<variablelist>
<varlistentry><term><literal>action</literal></term>
<listitem>
<para>
The type of action, given as a string value (signature
<literal>"s"</literal>).
This parameter is MANDATORY.
</para>
<variablelist>
<varlistentry><term><literal>add</literal></term>
<listitem>
A new kernel device has been added.
</listitem>
</varlistentry>
<varlistentry><term><literal>remove</literal></term>
<listitem>
An existing kernel device has been removed.
</listitem>
</varlistentry>
</variablelist>
</listitem>
</varlistentry>
<varlistentry><term><literal>name</literal></term>
<listitem>
<para>
The device name, given as a string value (signature
<literal>"s"</literal>).
This parameter is MANDATORY.
</para>
</listitem>
</varlistentry>
<varlistentry><term><literal>subsystem</literal></term>
<listitem>
<para>
The device subsystem, given as a string value (signature
<literal>"s"</literal>).
This parameter is MANDATORY.
</para>
</listitem>
</varlistentry>
<varlistentry><term><literal>uid</literal></term>
<listitem>
<para>
The unique ID of the physical device, given as a string value
(signature <literal>"s"</literal>).
This parameter is OPTIONAL, if not given the sysfs path of the
physical device will be used. This parameter must be the same
for all devices exposed by the same physical device.
</para>
</listitem>
</varlistentry>
</variablelist>
</para><para>
Since: 1.8
</para>
<variablelist role="params">
<varlistentry>
  <term><literal>IN a{sv} <parameter>properties</parameter></literal>:</term>
  <listitem><para>
event properties.
</para></listitem>
</varlistentry>
</variablelist>
</refsect2>
<refsect2 role="method" id="gdbus-method-org-freedesktop-ModemManager1.InhibitDevice">
  <title>The InhibitDevice() method</title>
  <indexterm zone="gdbus-method-org-freedesktop-ModemManager1.InhibitDevice"><primary sortas="org.freedesktop.ModemManager1.InhibitDevice">org.freedesktop.ModemManager1.InhibitDevice()</primary></indexterm>
<programlisting>
InhibitDevice (IN  s uid,
               IN  b inhibit);
</programlisting>
<para>
<link linkend="gdbus-interface-org-freedesktop-ModemManager1.top_of_page">org.freedesktop.ModemManager1</link>.Modem:Device property.
<parameter>inhibit</parameter>: <constant>TRUE</constant> to inhibit the modem and <constant>FALSE</constant> to uninhibit it.
</para><para>
Inhibit or uninhibit the device.
</para><para>
When the modem is inhibited ModemManager will close all its ports and
unexport it from the bus, so that users of the interface are no longer
able to operate with it.
</para><para>
This operation binds the inhibition request to the existence of the
caller in the DBus bus. If the caller disappears from the bus, the
inhibition will automatically removed.
</para><para>
Since: 1.10
</para>
<variablelist role="params">
<varlistentry>
  <term><literal>IN s <parameter>uid</parameter></literal>:</term>
  <listitem><para>
the unique ID of the physical device, given in the
</para></listitem>
</varlistentry>
<varlistentry>
  <term><literal>IN b <parameter>inhibit</parameter></literal>:</term>
  <listitem><para>
</para><para>
</para></listitem>
</varlistentry>
</variablelist>
</refsect2>
</refsect1>
<refsect1 role="details" id="gdbus-properties-org.freedesktop.ModemManager1">
  <title role="details.title">Property Details</title>
<refsect2 role="property" id="gdbus-property-org-freedesktop-ModemManager1.Version">
  <title>The "Version" property</title>
  <indexterm zone="gdbus-property-org-freedesktop-ModemManager1.Version"><primary sortas="org.freedesktop.ModemManager1:Version">org.freedesktop.ModemManager1:Version</primary></indexterm>
<programlisting>
Version  readable   s
</programlisting>
<para>
The runtime version of the ModemManager daemon.
</para><para>
Since: 1.10
</para>
</refsect2>
</refsect1>
</refentry>

